import { Component, OnInit, ViewChild } from '@angular/core';
import { Router, RouterEvent } from '@angular/router';

import { ShedulesComponent } from 'src/app/Components/shedules/shedules.component';
import { FaresComponent } from 'src/app/Components/fares/fares.component';
import { LanguageComponent } from 'src/app/Components/language/language.component';
import { ContactComponent } from 'src/app/Components/contact/contact.component';
import { SlidesComponent } from 'src/app/Components/slides/slides.component';

import { ModalController, LoadingController, PopoverController } from '@ionic/angular';

@Component({
  selector: 'app-home',
  templateUrl: './home.page.html',
  styleUrls: ['./home.page.scss'],
})
export class HomePage implements OnInit {
  
  public loadMap;
  selectedPath = '';
  tutorialbool: boolean;  

  //Menu layout list autogenerated
  private menuPages = [
    { title: 'Horarios', icon: 'clock' },
    { title: 'Tarifas', icon: 'cash' },
    { title: 'Idiomas', icon: 'globe' },
    { title: 'Contacto', icon: 'contact' }
  ];

  //Tabs layout list
  private tabPages = [
    { title: 'FISERSA', url: '/home/main', icon: 'map' },
    { title: 'L & P', url: '/home/stoplines', icon: 'car' },
    { title: 'Favoritos', url: '/home/favorites', icon: 'star' },
  ];

  //Popups of route-maps
  private routePage = [
    //L1
    { title: 'L1'},
    //L2
    { title: 'L2'},
    //L3
    { title: 'L3'},
    //LE
    { title: 'LE'},
  ];

  //Modal Tutorial
  private slidesPage = [
    { title: 'Slides'},
  ];

  constructor(
    private router: Router,
    private modalCtrl: ModalController,
    private popoverCtrl: PopoverController,
    private loadingCtrl: LoadingController,
  ) {
    //SelectedPath will provide the path to the component
    this.router.events.subscribe((event: RouterEvent) => {
      if (event && event.url) {
        this.selectedPath = event.url;
      }
    });
    console.log(this.selectedPath);
  }

  ngOnInit() {
    this.tutorialIsDone();
  }

//List of Menu
  async openPopup(page) {
    console.log(page);
    switch (page.title) {
      case 'Horarios': 
        const shedulesPopover = await  this.popoverCtrl.create({
            component: ShedulesComponent,
          });
          return await shedulesPopover.present();
        break;

        case 'Tarifas': 
        const faresPopover = await  this.popoverCtrl.create({
            component: FaresComponent,
          });
          return await faresPopover.present();
        break;

        case 'Idiomas': 
        const langPopover = await  this.popoverCtrl.create({
            component: LanguageComponent,
          });
          return await langPopover.present();
        break;

        case 'Contacto': 
        const contactPopover = await  this.popoverCtrl.create({
            component: ContactComponent,
          });
          return await contactPopover.present();
        break;
    
      default:
        break;
    }
  }

  //List for slides
  async openSlides(page) {
        const slidesModal = await this.modalCtrl.create({
            component: SlidesComponent,
          });
          return await slidesModal.present();
  }

  async presentLoading() {
    let loading = await this.loadingCtrl.create({
      spinner: "dots",
      duration: 1000
    });   
    loading.present();
  }

  tutorialIsDone() {
    let tutorialCtrl = localStorage.getItem("tutorial");
    let tutorialBool = JSON.parse(tutorialCtrl);
    if (!tutorialBool) {
      this.openSlides(SlidesComponent);
      this.reloadMap();
    }
    else if (tutorialBool){
      this.presentLoading();
      this.reloadMap();
    }
  }

  reloadMap() {
    setTimeout(() => this.loadMap = true, 200);
  }
}
